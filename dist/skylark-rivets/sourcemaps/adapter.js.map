{"version":3,"sources":["adapter.js"],"names":["define","Rivets","__indexOf","indexOf","adapters","id","counter","weakmap","weakReference","obj","_base","_name","hasOwnProperty","this","Object","defineProperty","value","callbacks","cleanupWeakReference","ref","keys","length","pointers","stubFunction","fn","map","original","k","r","response","_i","_len","_ref1","_ref2","_ref3","_ref4","apply","arguments","callback","observeMutations","keypath","functions","Array","isArray","call","push","unobserveMutations","idx","splice","observe","desc","_this","getOwnPropertyDescriptor","get","set","enumerable","newValue","cb","slice","unobserve"],"mappings":"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","file":"../adapter.js","sourcesContent":["define([\"./rivets\"],function(Rivets){\r\n  var __indexOf = [].indexOf;\r\n\r\n  Rivets[\"public\"].adapters['.'] = {\r\n    id: '_rv',\r\n    counter: 0,\r\n    weakmap: {},\r\n    weakReference: function(obj) {\r\n      var id, _base, _name;\r\n      if (!obj.hasOwnProperty(this.id)) {\r\n        id = this.counter++;\r\n        Object.defineProperty(obj, this.id, {\r\n          value: id\r\n        });\r\n      }\r\n      return (_base = this.weakmap)[_name = obj[this.id]] || (_base[_name] = {\r\n        callbacks: {}\r\n      });\r\n    },\r\n    cleanupWeakReference: function(ref, id) {\r\n      if (!Object.keys(ref.callbacks).length) {\r\n        if (!(ref.pointers && Object.keys(ref.pointers).length)) {\r\n          return delete this.weakmap[id];\r\n        }\r\n      }\r\n    },\r\n    stubFunction: function(obj, fn) {\r\n      var map, original, weakmap;\r\n      original = obj[fn];\r\n      map = this.weakReference(obj);\r\n      weakmap = this.weakmap;\r\n      return obj[fn] = function() {\r\n        var callback, k, r, response, _i, _len, _ref1, _ref2, _ref3, _ref4;\r\n        response = original.apply(obj, arguments);\r\n        _ref1 = map.pointers;\r\n        for (r in _ref1) {\r\n          k = _ref1[r];\r\n          _ref4 = (_ref2 = (_ref3 = weakmap[r]) != null ? _ref3.callbacks[k] : void 0) != null ? _ref2 : [];\r\n          for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\r\n            callback = _ref4[_i];\r\n            callback();\r\n          }\r\n        }\r\n        return response;\r\n      };\r\n    },\r\n    observeMutations: function(obj, ref, keypath) {\r\n      var fn, functions, map, _base, _i, _len;\r\n      if (Array.isArray(obj)) {\r\n        map = this.weakReference(obj);\r\n        if (map.pointers == null) {\r\n          map.pointers = {};\r\n          functions = ['push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splice'];\r\n          for (_i = 0, _len = functions.length; _i < _len; _i++) {\r\n            fn = functions[_i];\r\n            this.stubFunction(obj, fn);\r\n          }\r\n        }\r\n        if ((_base = map.pointers)[ref] == null) {\r\n          _base[ref] = [];\r\n        }\r\n        if (__indexOf.call(map.pointers[ref], keypath) < 0) {\r\n          return map.pointers[ref].push(keypath);\r\n        }\r\n      }\r\n    },\r\n    unobserveMutations: function(obj, ref, keypath) {\r\n      var idx, map, pointers;\r\n      if (Array.isArray(obj) && (obj[this.id] != null)) {\r\n        if (map = this.weakmap[obj[this.id]]) {\r\n          if (pointers = map.pointers[ref]) {\r\n            if ((idx = pointers.indexOf(keypath)) >= 0) {\r\n              pointers.splice(idx, 1);\r\n            }\r\n            if (!pointers.length) {\r\n              delete map.pointers[ref];\r\n            }\r\n            return this.cleanupWeakReference(map, obj[this.id]);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    observe: function(obj, keypath, callback) {\r\n      var callbacks, desc, value;\r\n      callbacks = this.weakReference(obj).callbacks;\r\n      if (callbacks[keypath] == null) {\r\n        callbacks[keypath] = [];\r\n        desc = Object.getOwnPropertyDescriptor(obj, keypath);\r\n        if (!((desc != null ? desc.get : void 0) || (desc != null ? desc.set : void 0))) {\r\n          value = obj[keypath];\r\n          Object.defineProperty(obj, keypath, {\r\n            enumerable: true,\r\n            get: function() {\r\n              return value;\r\n            },\r\n            set: (function(_this) {\r\n              return function(newValue) {\r\n                var cb, map, _i, _len, _ref1;\r\n                if (newValue !== value) {\r\n                  _this.unobserveMutations(value, obj[_this.id], keypath);\r\n                  value = newValue;\r\n                  if (map = _this.weakmap[obj[_this.id]]) {\r\n                    callbacks = map.callbacks;\r\n                    if (callbacks[keypath]) {\r\n                      _ref1 = callbacks[keypath].slice();\r\n                      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n                        cb = _ref1[_i];\r\n                        if (__indexOf.call(callbacks[keypath], cb) >= 0) {\r\n                          cb();\r\n                        }\r\n                      }\r\n                    }\r\n                    return _this.observeMutations(newValue, obj[_this.id], keypath);\r\n                  }\r\n                }\r\n              };\r\n            })(this)\r\n          });\r\n        }\r\n      }\r\n      if (__indexOf.call(callbacks[keypath], callback) < 0) {\r\n        callbacks[keypath].push(callback);\r\n      }\r\n      return this.observeMutations(obj[keypath], obj[this.id], keypath);\r\n    },\r\n    unobserve: function(obj, keypath, callback) {\r\n      var callbacks, idx, map;\r\n      if (map = this.weakmap[obj[this.id]]) {\r\n        if (callbacks = map.callbacks[keypath]) {\r\n          if ((idx = callbacks.indexOf(callback)) >= 0) {\r\n            callbacks.splice(idx, 1);\r\n            if (!callbacks.length) {\r\n              delete map.callbacks[keypath];\r\n              this.unobserveMutations(obj[keypath], obj[this.id], keypath);\r\n            }\r\n          }\r\n          return this.cleanupWeakReference(map, obj[this.id]);\r\n        }\r\n      }\r\n    },\r\n    get: function(obj, keypath) {\r\n      return obj[keypath];\r\n    },\r\n    set: function(obj, keypath, value) {\r\n      return obj[keypath] = value;\r\n    }\r\n  };\r\n\r\n  return Rivets[\"public\"].adapters;\r\n\r\n});\r\n\r\n"]}